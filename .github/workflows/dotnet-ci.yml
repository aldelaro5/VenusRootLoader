name: .NET CI

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main

jobs:
  build-Windows:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v5
        with:
          submodules: recursive
      - name: Setup .NET
        uses: actions/setup-dotnet@v5
        with:
          dotnet-quality: preview
          dotnet-version: 10.0.x
      - name: Install LLVM and Clang
        uses: KyleMayes/install-llvm-action@v2
        with:
          version: "20.1.4"
      - name: Add LLVM to path
        run: echo "$GITHUB_WORKSPACE\$env:LLVM_PATH\bin" | Out-File -FilePath $env:GITHUB_PATH -Append
      - name: Check environment
        run: |
          dotnet --version
          clang-cl -v
      - name: Restore dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build --no-restore
      - name: Test
        run: dotnet test --no-build --verbosity normal
      - name: Upload test logs
        uses: actions/upload-artifact@v4
        if: ${{ always() }}
        with:
          name: windows-test-logs
          path: .\VenusRootLoader.Bootstrap.Tests\bin\x64\Debug\TestResults\VenusRootLoader.Bootstrap.Tests_net10.0_x64.log

  build-Linux:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v5
        with:
          submodules: recursive
      - name: Setup .NET
        uses: actions/setup-dotnet@v5
        with:
          dotnet-quality: preview
          dotnet-version: 10.0.x
      - name: Install LLVM and Clang
        uses: KyleMayes/install-llvm-action@v2
        with:
          version: "20.1.4"
      - name: Add LLVM to path
        run:  echo "$LLVM_PATH/bin" >> $GITHUB_PATH
      - name: Download xwin
        id: xwin
        uses: robinraju/release-downloader@v1
        with:
          repository: 'Jake-Shadle/xwin'
          latest: true
          fileName: '*x86_64-unknown-linux-musl.tar.gz'
          out-file-path: 'xwin'
          extract: true
      - name: Add xwin to path
        run: echo "$GITHUB_WORKSPACE/xwin/$(basename -s .tar.gz ${{ fromJson(steps.xwin.outputs.downloaded_files)[0] }})" >> $GITHUB_PATH
      - name: install wine
        run: |
          sudo dpkg --add-architecture i386
          sudo apt-get update
          sudo apt-get install -y wine
          sudo apt-get install wine32:i386
          winecfg /v win11
      - name: Check environment
        run: |
          dotnet --version
          xwin -V
          clang-cl -v
          wine --version
      - name: Restore dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build --no-restore
      - name: Test
        run: dotnet test --no-build --verbosity normal
      - name: Upload test logs
        uses: actions/upload-artifact@v4
        if: ${{ always() }}
        with:
          name: linux-test-logs
          path: ./VenusRootLoader.Bootstrap.Tests/bin/x64/Debug/TestResults/VenusRootLoader.Bootstrap.Tests_net10.0_x64.log
