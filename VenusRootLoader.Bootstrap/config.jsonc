{
  // Disables VenusRootLoader. The bootstrap will immediately exit upon seeing a value of `true`
  // Environment: VRL_GLOBAL_DISABLE
  // Argument: --global-disable
  "DisableVrl": false,
  // Causes the game's `data.unity3d`'s asset bundle to be redirected to a modified version which
  // skips the Unity splash screen on boot. Once the modified bundle is generated once, further
  // boots will reuse it to make this process faster
  // Environment: VRL_SKIP_UNITY_SPLASHSCREEN
  // Argument: --skip-unity-splashscreen
  "SkipUnitySplashScreen": true,
  "LoggingSettings": {
    // Captures the native and managed logs of the Unity player in VenusRootLoader's logs.
    // All those logs will appear under the `UNITY` category which are rendered in cyan
    // if the console logs and its colors are enabled
    // Environment: VRL_INCLUDE_UNITY_LOGS
    // Argument: --include-unity-logs
    "IncludeUnityLogs": true,
    "ConsoleLoggerSettings": {
      // Enables and show a console window when the game starts that contains the VenusRootLoader logs
      // Environment: VRL_ENABLE_CONSOLE_LOGS
      // Argument: --enable-console-logs
      "Enable": true,
      // Enables colors to be rendered in the console logs if console logs are enabled.
      // The colors will be rendered using ANSI codes if supported, but if they aren't supported
      // on the terminal used or if using wine (since `wineconsole` does not support ANSI codes),
      // they will be rendered using the legacy colors scheme which only allows up to 16 colors.
      // `UNITY` logs are rendered in cyan while VenusRootLoader's own logs are rendered in magenta
      // Environment: VRL_CONSOLE_COLORS
      // Argument: --console-colors
      "LogWithColors": true
    },
    "DiskFileLoggerSettings": {
      // Enables logs to be written to a file in the Logs directory.
      // All logs of the current session will go to a file named `latest.log` while logs of past
      // sessions will be named after their creation timestamp
      // (they get renamed from the previous session's `latest.log` upon subsequent boot)
      // Environment: VRL_ENABLE_FILES_LOGS
      // Argument: --enable-files-logs
      "Enable": true,
      // Determines the amount of files to preserve in the Logs directory at all times if the disk
      // files logs are enabled. If the amount of files present is reached when booting, the oldest
      // logs file gets deleted to make place for the new one
      // Environment: VRL_MAX_FILES_LOGS
      // Argument: --max-files-logs
      "MaxFilesToKeep": 5
    }
  },
  "MonoDebuggerSettings": {
    // Enables Mono's integrated debugging server which allows IDEs and the Unity editor to connect
    // and remotely debug the game's managed code. It also features the ability for IDEs to
    // automatically discover the player's connection which avoids the need to enter the information
    // manually. If running on Linux using wine, this feature also includes fixes such that PDB files
    // path are reported correctly to the IDE using their Linux path instead of their wine path
    // Environment: VRL_DEBUGGER_ENABLE
    // Argument: --debugger-enable
    "Enable": true,
    // If the Mono debugger is enabled, this is the IP address the server will bind to.
    // Common values are 127.0.0.1 to bind only to the host machine and 0.0.0.0 to bind to every
    // IP address which allows remote debugging from a different machine on the local network.
    // The default is 127.0.0.1
    // Environment: VRL_DEBUGGER_IP_ADDRESS
    // Argument: --debugger-ip-address
    "IpAddress": "127.0.0.1",
    // If the Mono debugger is enabled, this is the port the server will bind to.
    // The default is 55555
    // Environment: VRL_DEBUGGER_PORT
    // Argument: --debugger-port
    "Port": 55555,
    // If the Mono debugger is enabled, this tells if Mono should wait for a debugger to be attached
    // when it initialises. VenusRootLoader logs will indicate when the debugger will be attached,
    // but if console logs are disabled, enabling this feature will make it seem that the game has
    // not launched while it has, and it's waiting for a debugger to be attached.
    // This is primarily used to debug issues which occurs very early on boot as it allows to attach
    // a debugger at the earliest possible moment|
    // Environment: VRL_DEBUGGER_SUSPEND_BOOT
    // Argument: --debugger-suspend-boot
    "SuspendOnBoot": false
  },
  // Logging filter configuration. This structure is exhaustively documented here:
  // https://learn.microsoft.com/en-us/dotnet/core/extensions/logging?tabs=command-line#configure-logging-without-code
  "Logging": {
    "LogLevel": {
      "Default": "Trace",
      "VenusRootLoader.Bootstrap": "Trace",
      "VenusRootLoader.Bootstrap.Unity.PlayerConnectionDiscovery": "Debug",
      "VenusRootLoader.Bootstrap.Mono.SdbWinePathTranslator": "Debug"
    }
  }
}